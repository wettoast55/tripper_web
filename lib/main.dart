import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart'; // for anonymous login
import 'package:cloud_functions/cloud_functions.dart'; // if using functions

import 'firebase_options.dart'; // generated by flutterfire configure
import 'package:tripper_web/mygroup.dart';
import 'package:tripper_web/surveypage.dart';

void main() async {
  // ✅ Required to initialize Firebase before runApp
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  print('✅ Firebase initialized successfully');

  // ✅ Ensure anonymous login is done BEFORE runApp
  await _ensureLoggedIn();
  print('✅ User is logged in');

  // ✅ Optional: Set Firebase Functions region
  FirebaseFunctions.instanceFor(region: 'us-central1');

  runApp(const MyApp());
}

// ✅ Logs in user anonymously if not already signed in
Future<void> _ensureLoggedIn() async {
  final auth = FirebaseAuth.instance;
  if (auth.currentUser == null) {
    await auth.signInAnonymously();
    print('[Auth] Signed in anonymously: ${auth.currentUser?.uid}');
  } else {
    print('[Auth] Already signed in: ${auth.currentUser?.uid}');
  }
}

// ✅ Root of the app
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Demo - TripCliques',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(
          seedColor: const Color.fromARGB(136, 79, 97, 255),
        ),
      ),
      // ✅ Home screen with tabbed navigation
      home: const MyHomePage(title: 'TripCliques Home Page'),
      // ✅ Add named routes here if needed later
      routes: {
        '/survey': (context) => const SurveyFormPage(),
        '/mygroup': (context) => const MyGroupPage(),
      },
    );
  }
}

// ✅ Stateful widget to manage tab navigation
class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});
  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

// ✅ Main UI and navigation logic
class _MyHomePageState extends State<MyHomePage> {
  int _selectedIndex = 0; // current tab index

  // ✅ Each tab corresponds to a Widget in this list
  List<Widget> get _pages => [
        // Page 0 - Discover
        Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: const [Text("page 1 (home/discover)")],
        ),
        // Page 1 - Find Trips
        Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: const [Text("page 2 (find trips)")],
        ),
        // Page 2 - My Group
        const MyGroupPage(),
        // Page 3 - Saved Trips
        Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: const [Text("page 4 (saved trips)")],
        ),
      ];

  // ✅ Updates selected tab
  void _onTabTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  // ✅ Main build method
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: const Color.fromARGB(255, 0, 44, 189),
        title: Text(widget.title),
      ),

      // ✅ Displays content for selected tab
      body: SizedBox.expand(child: _pages[_selectedIndex]),

      // ✅ Floating action button only appears on "My Group" page
      floatingActionButton: _selectedIndex == 2
          ? FloatingActionButton(
              onPressed: () {
                // ✅ Opens the survey form in a dialog
                showDialog(
                  context: context,
                  builder: (context) => const SurveyFormPage(),
                );
              },
              tooltip: 'Open Survey',
              child: const Icon(Icons.send_and_archive_rounded),
            )
          : null,

      // ✅ Bottom navigation bar
      bottomNavigationBar: BottomNavigationBar(
        selectedItemColor: const Color.fromARGB(255, 208, 212, 255),
        backgroundColor: const Color.fromARGB(255, 0, 119, 254),
        type: BottomNavigationBarType.fixed,
        currentIndex: _selectedIndex,
        onTap: _onTabTapped,
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.local_fire_department),
            label: 'discover/popular',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.star),
            label: 'find trips',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.group),
            label: 'my group',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.bookmark_add),
            label: 'saved trips',
          ),
        ],
      ),
    );
  }
}
